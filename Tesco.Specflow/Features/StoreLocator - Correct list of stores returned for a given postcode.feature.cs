// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tesco.Specflow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("04: StoreLocator - Correct list of stores returned for a given postcode")]
    public partial class _04StoreLocator_CorrectListOfStoresReturnedForAGivenPostcodeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "StoreLocator - Correct list of stores returned for a given postcode.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "04: StoreLocator - Correct list of stores returned for a given postcode", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Correct list of stores returned for a given postcode")]
        [NUnit.Framework.CategoryAttribute("StoreLocator")]
        [NUnit.Framework.TestCaseAttribute("CT12 6QA", "Broadstairs Extra", "CT10 2QJ", "0.70", "Ramsgate Manston Superstore", "CT12 6NT", "0.74", null)]
        [NUnit.Framework.TestCaseAttribute("BS20 8PY", "Portishead W Hill Express", "BS20 6LR", "1.39", "Nailsea Superstore", "BS48 1AQ", "2.92", null)]
        [NUnit.Framework.TestCaseAttribute("CO2 0EJ", "Colchester Crouch St Express", "CO3 3HH", "3.39", "Colchester Magdalen Express", "CO1 2LA", "3.79", null)]
        [NUnit.Framework.TestCaseAttribute("BT35 7LZ", "Newry Extra", "BT34 1EE", "2.69", "na", "na", "na", null)]
        [NUnit.Framework.TestCaseAttribute("CF44 6EN", "Aberdare Superstore", "CF44 8DL", "1.62", "Merthyr Tydfil Extra", "CF47 0AL", "3.98", null)]
        public virtual void CorrectListOfStoresReturnedForAGivenPostcode(string myPostcode, string store1Name, string store1Postcode, string store1Distance, string store2Name, string store2Postcode, string store2Distance, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "StoreLocator"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("MyPostcode", myPostcode);
            argumentsOfScenario.Add("Store1Name", store1Name);
            argumentsOfScenario.Add("Store1Postcode", store1Postcode);
            argumentsOfScenario.Add("Store1Distance", store1Distance);
            argumentsOfScenario.Add("Store2Name", store2Name);
            argumentsOfScenario.Add("Store2Postcode", store2Postcode);
            argumentsOfScenario.Add("Store2Distance", store2Distance);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Correct list of stores returned for a given postcode", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 19
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 20
 testRunner.Given("navigate to the tesco homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 21
 testRunner.When(string.Format("search for store using postcode:{0}", myPostcode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
 testRunner.Then(string.Format("verify the top 2 stores are Store1Name:{0} Store1Postcode:{1} Store1Distance:{2} " +
                            "Store2Name:{3} Store2Postcode:{4} Store2Distance:{5}", store1Name, store1Postcode, store1Distance, store2Name, store2Postcode, store2Distance), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
